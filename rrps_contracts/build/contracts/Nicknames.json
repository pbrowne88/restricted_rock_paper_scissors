{
  "contractName": "Nicknames",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Nicknames.sol\":\"Nicknames\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":1},\"remappings\":[]},\"sources\":{\"project:/contracts/Nicknames.sol\":{\"keccak256\":\"0xabdf04c4943eb19b9dfe65c23c9cc2cf0c147c93df332c0c51d9e150fe423059\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ecb17b6361c15d10950015274de1e68596cee9662656a270fc4f79ba646f4df\",\"dweb:/ipfs/QmcWUapDanZGHhPjD1pB7UwxNBqHAAWH6kzm7angSzYYx8\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122074d42e16dc96276a883eb06500b4478a8269fa98b35693e856f2f90ec4dac75064736f6c634300080d0033",
  "deployedBytecode": "0x6080604052600080fdfea264697066735822122074d42e16dc96276a883eb06500b4478a8269fa98b35693e856f2f90ec4dac75064736f6c634300080d0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "60:1994:11:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "60:1994:11:-:0;;;;;",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\n\n\n\ncontract Nicknames {\n    // Associate the nickname \n    // nicknamesToAddresses[nickname] = msg.sender;\n    // addressesToNicknames[msg.sender] = nickname;\n\n    //De-register address and nickname\n    // nicknamesToAddresses[addressesToNicknames[player]] = address(0);\n    // addressesToNicknames[player] = emptyString;\n\n        //De-register address and nickname\n        // nicknamesToAddresses[addressesToNicknames[msg.sender]] = address(0);\n        // addressesToNicknames[msg.sender] = emptyString;\n\n    // function challengeCommit(string memory challengeeNickname, bytes32 hash) public {\n    //     if (nicknamesToAddresses[challengeeNickname] == address(0)) {revert NicknameNotFound();}\n    //     challengeCommit(nicknamesToAddresses[challengeeNickname], hash);\n    // }\n\n\n    // function openCommit(string memory challengerNickname, uint cardType) public {\n    //     if (nicknamesToAddresses[challengerNickname] == address(0)) {revert NicknameNotFound();}\n    //     openCommit(nicknamesToAddresses[challengerNickname], cardType);\n    // }\n\n\n    // function reveal(string memory challengeeNickname, uint cardType, string calldata salt) public {\n    //     if (nicknamesToAddresses[challengeeNickname] == address(0)) {revert NicknameNotFound();} \n    //     reveal(nicknamesToAddresses[challengeeNickname], cardType, salt);\n    // }\n\n\n    // function withdrawChallenge(string memory challengeeNickname) public {\n    //     withdrawChallenge(nicknamesToAddresses[challengeeNickname]);\n    // }\n\n\n    // function withdrawOpenCommit(string memory challengerNickname) public {\n    //     withdrawOpenCommit(nicknamesToAddresses[challengerNickname]);\n    // }\n\n        // function balanceOf(string memory nickname) public view returns(uint256, uint256, uint256, uint256){\n    //     return(balanceOf(nicknamesToAddresses[nickname]));\n    // }\n\n\n    // function balanceOf(string memory nickname, uint256 id) internal view {\n    //     balanceOf(nicknamesToAddresses[nickname], id);\n    // }\n\n}",
  "sourcePath": "/home/pierson/Desktop/restricted_rock_paper_scissors/rrps_contracts/contracts/Nicknames.sol",
  "ast": {
    "absolutePath": "project:/contracts/Nicknames.sol",
    "exportedSymbols": {
      "Nicknames": [
        2078
      ]
    },
    "id": 2079,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2077,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:11"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Nicknames",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2078,
        "linearizedBaseContracts": [
          2078
        ],
        "name": "Nicknames",
        "nameLocation": "69:9:11",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 2079,
        "src": "60:1994:11",
        "usedErrors": []
      }
    ],
    "src": "32:2022:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2023-10-03T01:31:13.325Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}